import java.math.BigInteger;
import java.util.Scanner;

public class Stars {
	public static void main(String[] args) {
		// String[] list = {"Hello", "World", "In", "A", "Frame"};
		// printListInAFrame( list );
		// giveMeNAndReact();
		fibNums(100, BigInteger.ZERO, BigInteger.ONE);
	}

	// Challenge 1
	private static void giveMeNAndReact() {
		Scanner scan = new Scanner(System.in);
		System.out.println("GIVE ME N");
		int n = scan.nextInt();
		System.out.println("TYPE: \n0 FOR SUMMATION\n1 FOR FACTORIAL");
		System.out.println("ANSWER IS: " + compute(n, scan.nextInt()));

	}

	private static int compute(int n, int code) {
		int ans = 0;
		for (int i = 1; i <= n; i++) {
			if (code == 1) { // Factorial
				if (ans == 0)
					ans = 1;
				ans *= i;
			} else if (code == 0) { // Summation
				ans += i;
			}
		}
		return ans;
	}

	// Challenge 2
	private static void printListInAFrame(String[] list) {
		// Find Longest Word
		int longest = 0;
		for (String str : list) {
			if (str.length() > longest) {
				longest = str.length();
			}
		}
		// First Row of Stars
		printTimes("*", longest + 4);
		System.out.println();
		// The words
		for (String str : list) {
			System.out.print("* " + str);
			printTimes(" ", longest - str.length());
			System.out.println(" *");
		}
		// Last Row of Stars
		printTimes("*", longest + 4);
	}

	private static void printTimes(String str, int times) {
		for (int i = 0; i < times; i++) {
			System.out.print(str);
		}
	}

	// Challenge 3
	private static BigInteger fibNums(int numbers, BigInteger one,
			BigInteger two) {
		if (numbers == 0) {
			return BigInteger.ZERO;
		}
		System.out.println("NUM: " + 100 - numbers + " " + two);
		BigInteger temp = two;
		two = two.add(one);
		one = temp;
		return fibNums(numbers - 1, one, two);
	}
}
